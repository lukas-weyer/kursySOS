// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String   @id @default(cuid())
  name     String   @default("")
  email    String   @unique @default("")
  password String
  posts    Post[]   @relation("Post_author")
  courses  Course[] @relation("Course_users")
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  slug        String    @unique @default("")
  status      String?   @default("draft")
  content     String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime? @default(now())
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags")

  @@index([authorId])
}

model Course {
  id          String    @id @default(cuid())
  title       String    @default("")
  subtitle    String    @default("")
  slug        String    @unique @default("")
  description String    @default("")
  chapters    Chapter[] @relation("Chapter_course")
  lessons     Lesson[]  @relation("Lesson_course")
  users       User[]    @relation("Course_users")
}

model Chapter {
  id          String   @id @default(cuid())
  name        String   @default("")
  number      Int
  mirror      Boolean  @default(false)
  description String   @default("")
  lessons     Lesson[] @relation("Lesson_chapter")
  course      Course[] @relation("Chapter_course")
}

model Lesson {
  id         String   @id @default(cuid())
  number     Int
  lessonSlug String   @unique @default("")
  title      String   @default("")
  status     String?  @default("draft")
  youtube    String   @default("")
  course     Course?  @relation("Lesson_course", fields: [courseId], references: [id])
  courseId   String?  @map("course")
  chapter    Chapter? @relation("Lesson_chapter", fields: [chapterId], references: [id])
  chapterId  String?  @map("chapter")

  @@index([courseId])
  @@index([chapterId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}